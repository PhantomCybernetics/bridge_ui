// generated from rosidl_adapter/resource/msg.idl.em
// with input from ffmpeg_image_transport_msgs/msg/FFMPEGPacket.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module ffmpeg_image_transport_msgs {
  module msg {
    struct FFMPEGPacket {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "original image width")
      int32 width;

      @verbatim (language="comment", text=
        "original image height")
      int32 height;

      @verbatim (language="comment", text=
        "encoding used")
      string encoding;

      @verbatim (language="comment", text=
        "packet pts")
      uint64 pts;

      @verbatim (language="comment", text=
        "packet flags")
      uint8 flags;

      @verbatim (language="comment", text=
        "true if machine stores in big endian format")
      boolean is_bigendian;

      @verbatim (language="comment", text=
        "ffmpeg compressed payload")
      sequence<uint8> data;
    };
  };
};
